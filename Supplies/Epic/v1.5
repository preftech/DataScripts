select DISTINCT
case when allp.MATCHED_PREF_ID is not null then allp.MATCHED_PREF_ID else allp.ALL_DEF_OR_PROC_ID end as emr_pref_card_id, 
vs.ACTUAL_LOC_NAME AS EMR_SURGICAL_AREA,
vsi.LOG_ID AS EMR_OR_CASE_NUMBER,
--vsi.ITEM_ID AS EMR_ITEM_NUMBER,
ID.IDENTITY_ID AS ERP_ITEM_NUMBER,
sup.SUPPLY_NAME AS ERP_ITEM_DESCRIPTION,
supcount.NUM_NEEDED_OPEN + supcount.NUM_SUPPLIES_PRN AS EMR_FILL,
vsi.NUMBER_USED AS EMR_USE,
vsi.NUMBER_WASTED AS EMR_WASTE,

 CASE WHEN ((supcount.NUM_NEEDED_OPEN + supcount.NUM_SUPPLIES_PRN) - (vsi.NUMBER_USED + vsi.NUMBER_WASTED)) < 0 THEN 0 ELSE ((supcount.NUM_NEEDED_OPEN + supcount.NUM_SUPPLIES_PRN) - (vsi.NUMBER_USED + vsi.NUMBER_WASTED)) END AS EMR_RETURN,

vs.SCHED_SURGERY_DATETIME AS EMR_PROCEDURE_DATE,
vsi.NUMBER_USED * vsi.COST_PER_UNIT as EMR_TRANSACTION_VALUE
--imp.LOT_NUMBER AS LOT_NUMBER,
--imp.SERIAL_NUMBER AS SERIAL_NUMBER,
--vsi.COST_PER_UNIT

from V_LOG_SUPPLIES_IMPLANTS vsi
inner join V_SURGERY vs on vsi.LOG_ID = vs.LOG_ID
LEFT JOIN OR_LOG_PREF_CARDS orlp on vs.LOG_ID = orlp.LOG_ID
left outer join OR_IMP imp on vsi.IMPLANT_ID = imp.IMPLANT_ID
left outer join OR_SPLY sup on vsi.ITEM_ID = sup.SUPPLY_ID
left outer join CLARITY_EAP cdm on imp.CHARGE_CODE_EAP_ID = cdm.PROC_ID
left outer join ZC_IMP_VOLUME_UNIT zciu on imp.IMP_VOLUME_UNIT_C = zciu.IMP_VOLUME_UNIT_C

LEFT JOIN or_log_all_proc allp on vs.LOG_ID = allp.LOG_ID and allp.LINE = 1

--exclude PCs where no surgeon on card
join OR_PROC_MOD_SER_INDEX ind on allp.MATCHED_PREF_ID = ind.OR_PROC_ID and ind.LINE = 1
--left JOIN CLARITY_SER SER3 ON ind.PMODS_SER_INDEX_ID = SER2.PROV_ID


join (select pk.LOG_ID, sup.SUPPLY_ID, sup.SUPPLY_INV_LOC_ID, sup.SUP_UNIT_COST, sup.RSN_SUP_WASTED_C, sup.CHARGEABLE_YN,
        sum(NUM_NEEDED_OPEN) AS NUM_NEEDED_OPEN, SUM(NUM_SUPPLIES_PRN) AS NUM_SUPPLIES_PRN
      FROM OR_PKLST pk 
      join OR_PKLST_SUP_LIST sup ON pk.PICK_LIST_ID = sup.PICK_LIST_ID
      AND (sup.IMPLANT_YN IS NULL OR sup.IMPLANT_YN = 'N')
      AND (SUPPLIES_USED>0 or sup.SUPPLIES_WASTED>0)
      AND pk.LOG_ID is not null
	WHERE (pk.PICK_LIST_TYPE_C is null or pk.PICK_LIST_TYPE_C<>99)  --exclude depletion pick lists
		and (pk.DELETED_YN is null or pk.DELETED_YN='N')  --exclude deleted pick lists
      GROUP BY pk.LOG_ID, sup.SUPPLY_ID, sup.SUPPLY_INV_LOC_ID, sup.SUP_UNIT_COST, sup.RSN_SUP_WASTED_C, sup.CHARGEABLE_YN) supcount on vs.LOG_ID = supcount.LOG_ID AND vsi.ITEM_ID = supcount.SUPPLY_ID
JOIN OR_SPLY sply on supcount.SUPPLY_ID = sply.SUPPLY_ID

LEFT JOIN IDENTITY_SUP_ID ID ON vsi.ITEM_ID = ID.SUPPLY_ID

where vs.SCHED_SURGERY_DATETIME between to_date( '01-may-2022 00:00:00', 'dd-mon-yyyy hh24:mi:ss' )
and to_date( '31-oct-2022 23:59:59', 'dd-mon-yyyy hh24:mi:ss' )

and vs.LOG_STATUS_C in (2,5)
and (allp.MATCHED_PREF_ID is not null and allp.ALL_DEF_OR_PROC_ID is not null)

and allp.MATCHED_PREF_ID like 'M-%'
--AND allp.MATCHED_PREF_ID = 'M-23405'
--ORDER BY  ID.IDENTITY_ID
ORDER BY vsi.LOG_ID
